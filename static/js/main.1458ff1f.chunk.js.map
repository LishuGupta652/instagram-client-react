{"version":3,"sources":["components/Header.js","components/UI/post.js","components/screens/home.js","components/screens/login.js","components/screens/signup.js","components/screens/profile.js","components/screens/createPost.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Post","url","src","htmlFor","type","id","Home","Login","for","placeholder","Signup","history","useHistory","useState","localStorage","getItem","name","setName","email","setEmail","password","setPassword","error","setError","success","setSuccess","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","data","message","push","value","onChange","target","setItem","Profile","alt","CreatePost","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1458ff1f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"container\">\r\n          <div className=\"header-inner\">\r\n            <div className=\"flex\">\r\n              <div className=\"left\">\r\n                <Link to=\"/\">\r\n                  <p>Baten</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Link to=\"/login\">\r\n                  <p className=\"login\">Login</p>\r\n                </Link>\r\n                <Link to=\"/signup\">\r\n                  <p className=\"signup\">Sign up</p>\r\n                </Link>\r\n                <Link to=\"/profile\">\r\n                  <p className=\"profile\">Profile</p>\r\n                </Link>\r\n                <Link to=\"/createpost\">\r\n                  <p className=\"profile\">Create post</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Post = ({ url }) => {\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <div className=\"card\">\r\n          <div className=\"post-header\">\r\n            <h3>Footer</h3>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            <div className=\"post-image\">\r\n              <img src={url ? `${url}` : \"http://unsplash.it/500\"} />\r\n            </div>\r\n          </div>\r\n          <div className=\"post-footer\">\r\n            <label htmlFor=\"comment\">Comments</label>\r\n            <input type=\"text\" id=\"comment\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"../UI/post\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"home-posts\">\r\n        <Post url=\"https://unsplash.it/501\" />\r\n        <Post />\r\n        <Post />\r\n        <Post />\r\n        <Post />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <div className=\"form login-form\">\r\n        <div className=\"container\">\r\n          <div className=\"inner-form\">\r\n            <form>\r\n              <h2>Baten login</h2>\r\n              <section>\r\n                <label for=\"email\"></label>\r\n                <input type=\"email\" placeholder=\"Enter your email\" id=\"email\" />\r\n              </section>\r\n\r\n              <section>\r\n                <label for=\"password\"> </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your Password\"\r\n                  id=\"password\"\r\n                />\r\n              </section>\r\n\r\n              <button type=\"submit\">Log in</button>\r\n              <h5 className=\"log\">\r\n                <Link to=\"/signup\"> Don't have a account? Register here</Link>\r\n              </h5>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory(\"\");\r\n  const [name, setName] = useState(\r\n    localStorage.getItem(\"name\") ? localStorage.getItem(\"name\") : \"\"\r\n  );\r\n  const [email, setEmail] = useState(\r\n    localStorage.getItem(\"email\") ? localStorage.getItem(\"email\") : \"\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const postSignupData = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.error) {\r\n          return setError(data.error);\r\n        } else {\r\n          setSuccess(data.message);\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          history.push(\"/login\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form signup-form\">\r\n        <div className=\"container\">\r\n          <div className=\"inner-form\">\r\n            <form onSubmit={postSignupData}>\r\n              <h2>Baten Sign up</h2>\r\n              <h5 className=\"error\">{error}</h5>\r\n              <h5 className=\"success\">{success}</h5>\r\n              <section>\r\n                <label htmlFor=\"name\"></label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  placeholder=\"Enter your name\"\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                    localStorage.setItem(\"name\", e.target.value);\r\n                  }}\r\n                />\r\n              </section>\r\n\r\n              <section>\r\n                <label htmlFor=\"email\"></label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter your email\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                    localStorage.setItem(\"email\", e.target.value);\r\n                  }}\r\n                />\r\n              </section>\r\n\r\n              <section>\r\n                <label htmlFor=\"password\"> </label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Enter your Password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n              </section>\r\n\r\n              <button type=\"submit\">Log in</button>\r\n              <h5 className=\"log\">\r\n                <Link to=\"/login\">Already have a account? Login here</Link>\r\n              </h5>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Post from \"../UI/post\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"profile-inner\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"ph-flex\">\r\n                <div className=\"ph-image\">\r\n                  <img src=\"http://unsplash.it/300\" alt=\"Profile_picture\" />\r\n                </div>\r\n                <div className=\"ph-content\">\r\n                  <h1>User name</h1>\r\n                  <div className=\"ph-tabs\">\r\n                    <p>\r\n                      Followers <span>99+</span>\r\n                    </p>\r\n                    <p>\r\n                      Following <span>99+</span>\r\n                    </p>\r\n                    <p>\r\n                      Requests <span>99+</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-posts\">\r\n              <Post url=\"https://unsplash.it/501\" />\r\n              <Post />\r\n              <Post />\r\n              <Post />\r\n              <Post />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst CreatePost = () => {\r\n  return (\r\n    <>\r\n      <div className=\"createpost\">\r\n        <div className=\"container\">\r\n          <div className=\"createpost-inner\">\r\n            <div className=\"card\">\r\n              <input type=\"text\" placeholder=\"title\" />\r\n              <input type=\"text\" placeholder=\"body\" />\r\n              <input type=\"file\" name=\"file\" id=\"file\" />\r\n              <button type=\"submit\">Create Post</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/screens/home\";\nimport Login from \"./components/screens/login\";\nimport Signup from \"./components/screens/signup\";\nimport Profile from \"./components/screens/profile\";\nimport CreatePost from \"./components/screens/createPost\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/createpost\">\n          <CreatePost />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Css\nimport \"./css/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}