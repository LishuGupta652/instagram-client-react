{"version":3,"sources":["components/Header.js","components/screens/home.js","components/screens/login.js","components/screens/signup.js","components/UI/post.js","components/screens/profile.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Home","Login","for","type","placeholder","id","Signup","Post","url","src","Profile","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6MAkCeA,EA/BA,WACb,OACE,oCACE,gCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,KACP,sCAGJ,yBAAKD,UAAU,SACb,kBAAC,IAAD,CAAMC,GAAG,UACP,uBAAGD,UAAU,SAAb,UAEF,kBAAC,IAAD,CAAMC,GAAG,WACP,uBAAGD,UAAU,UAAb,YAEF,kBAAC,IAAD,CAAMC,GAAG,YACP,uBAAGD,UAAU,WAAb,mB,OCbHE,EARF,WACX,OACE,6BACE,sCCgCSC,EAlCD,WACZ,OACE,oCACE,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,2CACA,iCACE,2BAAOI,IAAI,UACX,2BAAOC,KAAK,QAAQC,YAAY,mBAAmBC,GAAG,WAGxD,iCACE,2BAAOH,IAAI,YAAX,KACA,2BACEC,KAAK,WACLC,YAAY,sBACZC,GAAG,cAIP,4BAAQF,KAAK,UAAb,UACA,wBAAIL,UAAU,OACZ,kBAAC,IAAD,CAAMC,GAAG,WAAT,+CCeDO,EAvCA,WACb,OACE,6BACE,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,6CACA,iCACE,2BAAOI,IAAI,SACX,2BAAOC,KAAK,OAAOC,YAAY,kBAAkBC,GAAG,UAGtD,iCACE,2BAAOH,IAAI,UACX,2BAAOC,KAAK,QAAQC,YAAY,mBAAmBC,GAAG,WAGxD,iCACE,2BAAOH,IAAI,YAAX,KACA,2BACEC,KAAK,WACLC,YAAY,sBACZC,GAAG,cAIP,4BAAQF,KAAK,UAAb,UACA,wBAAIL,UAAU,OACZ,kBAAC,IAAD,CAAMC,GAAG,UAAT,2CAKH,MCbEQ,EAtBF,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACd,OACE,oCACE,yBAAKV,UAAU,QACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,uCAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,yBAAKW,IAAKD,EAAG,UAAMA,GAAQ,6BAG/B,yBAAKV,UAAU,eACb,4CCYGY,EAzBC,WACd,OACE,oCACE,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eAGnB,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAMU,IAAI,4BACV,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,YCWCG,MAtBf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,UCXUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.283f5feb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"container\">\r\n          <div className=\"header-inner\">\r\n            <div className=\"flex\">\r\n              <div className=\"left\">\r\n                <Link to=\"/\">\r\n                  <p>Baten</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Link to=\"/login\">\r\n                  <p className=\"login\">Login</p>\r\n                </Link>\r\n                <Link to=\"/signup\">\r\n                  <p className=\"signup\">Sign up</p>\r\n                </Link>\r\n                <Link to=\"/profile\">\r\n                  <p className=\"profile\">Profile</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <div className=\"form login-form\">\r\n        <div className=\"container\">\r\n          <div className=\"inner-form\">\r\n            <form>\r\n              <h2>Baten login</h2>\r\n              <section>\r\n                <label for=\"email\"></label>\r\n                <input type=\"email\" placeholder=\"Enter your email\" id=\"email\" />\r\n              </section>\r\n\r\n              <section>\r\n                <label for=\"password\"> </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your Password\"\r\n                  id=\"password\"\r\n                />\r\n              </section>\r\n\r\n              <button type=\"submit\">Log in</button>\r\n              <h5 className=\"log\">\r\n                <Link to=\"/signup\"> Don't have a account? Register here</Link>\r\n              </h5>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"form signup-form\">\r\n        <div className=\"container\">\r\n          <div className=\"inner-form\">\r\n            <form>\r\n              <h2>Baten Sign up</h2>\r\n              <section>\r\n                <label for=\"name\"></label>\r\n                <input type=\"text\" placeholder=\"Enter your name\" id=\"name\" />\r\n              </section>\r\n\r\n              <section>\r\n                <label for=\"email\"></label>\r\n                <input type=\"email\" placeholder=\"Enter your email\" id=\"email\" />\r\n              </section>\r\n\r\n              <section>\r\n                <label for=\"password\"> </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your Password\"\r\n                  id=\"password\"\r\n                />\r\n              </section>\r\n\r\n              <button type=\"submit\">Log in</button>\r\n              <h5 className=\"log\">\r\n                <Link to=\"/login\">Already have a account? Login here</Link>\r\n              </h5>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nconst Post = ({ url }) => {\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <div className=\"card\">\r\n          <div className=\"post-header\">\r\n            <h3>Footer</h3>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            <div className=\"post-image\">\r\n              <img src={url ? `${url}` : \"http://unsplash.it/500\"} />\r\n            </div>\r\n          </div>\r\n          <div className=\"post-footer\">\r\n            <h3>Footer</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"../UI/post\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"profile-inner\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"ph-flex\">\r\n                <div className=\"ph-image\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-posts\">\r\n              <Post url=\"https://unsplash.it/501\" />\r\n              <Post />\r\n              <Post />\r\n              <Post />\r\n              <Post />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/screens/home\";\nimport Login from \"./components/screens/login\";\nimport Signup from \"./components/screens/signup\";\nimport Profile from \"./components/screens/profile\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Css\nimport \"./css/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}